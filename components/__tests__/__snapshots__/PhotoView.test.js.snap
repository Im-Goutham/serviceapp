// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PhotoView Snapshot testing should have same snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PhotoView
    hidePhotoView={[Function]}
    images={Array []}
    index={0}
    navigation={
      Object {
        "goBack": [MockFunction],
        "navigate": [MockFunction],
      }
    }
    onPress={[MockFunction]}
    photoView={false}
    showBackButton={[Function]}
    showPhotoView={[Function]}
    signIn={[Function]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <ImageViewer
        backgroundColor="black"
        enableImageZoom={true}
        enableSwipeDown={true}
        flipThreshold={80}
        footerContainerStyle={Object {}}
        imageUrls={Array []}
        index={0}
        loadingRender={[Function]}
        maxOverflow={300}
        menuContext={
          Object {
            "cancel": "cancel",
            "saveToLocal": "save to the album",
          }
        }
        onCancel={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onDoubleClick={[Function]}
        onLongPress={[Function]}
        onSave={[Function]}
        onSaveToCamera={[Function]}
        onShowModal={[Function]}
        onSwipeDown={[Function]}
        renderArrowLeft={[Function]}
        renderArrowRight={[Function]}
        renderFooter={[Function]}
        renderHeader={[Function]}
        renderImage={[Function]}
        renderIndicator={[Function]}
        saveToLocalByLongPress={true}
        show={false}
        style={Object {}}
      />,
      "hardwareAccelerated": false,
      "onRequestClose": [Function],
      "transparent": true,
      "visible": false,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "backgroundColor": "black",
        "enableImageZoom": true,
        "enableSwipeDown": true,
        "failImageSource": undefined,
        "flipThreshold": 80,
        "footerContainerStyle": Object {},
        "imageUrls": Array [],
        "index": 0,
        "loadingRender": [Function],
        "maxOverflow": 300,
        "menuContext": Object {
          "cancel": "cancel",
          "saveToLocal": "save to the album",
        },
        "onCancel": [Function],
        "onChange": [Function],
        "onClick": [Function],
        "onDoubleClick": [Function],
        "onLongPress": [Function],
        "onSave": [Function],
        "onSaveToCamera": [Function],
        "onShowModal": [Function],
        "onSwipeDown": [Function],
        "renderArrowLeft": [Function],
        "renderArrowRight": [Function],
        "renderFooter": [Function],
        "renderHeader": [Function],
        "renderImage": [Function],
        "renderIndicator": [Function],
        "saveToLocalByLongPress": true,
        "show": false,
        "style": Object {},
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <ImageViewer
          backgroundColor="black"
          enableImageZoom={true}
          enableSwipeDown={true}
          flipThreshold={80}
          footerContainerStyle={Object {}}
          imageUrls={Array []}
          index={0}
          loadingRender={[Function]}
          maxOverflow={300}
          menuContext={
            Object {
              "cancel": "cancel",
              "saveToLocal": "save to the album",
            }
          }
          onCancel={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onDoubleClick={[Function]}
          onLongPress={[Function]}
          onSave={[Function]}
          onSaveToCamera={[Function]}
          onShowModal={[Function]}
          onSwipeDown={[Function]}
          renderArrowLeft={[Function]}
          renderArrowRight={[Function]}
          renderFooter={[Function]}
          renderHeader={[Function]}
          renderImage={[Function]}
          renderIndicator={[Function]}
          saveToLocalByLongPress={true}
          show={false}
          style={Object {}}
        />,
        "hardwareAccelerated": false,
        "onRequestClose": [Function],
        "transparent": true,
        "visible": false,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "backgroundColor": "black",
          "enableImageZoom": true,
          "enableSwipeDown": true,
          "failImageSource": undefined,
          "flipThreshold": 80,
          "footerContainerStyle": Object {},
          "imageUrls": Array [],
          "index": 0,
          "loadingRender": [Function],
          "maxOverflow": 300,
          "menuContext": Object {
            "cancel": "cancel",
            "saveToLocal": "save to the album",
          },
          "onCancel": [Function],
          "onChange": [Function],
          "onClick": [Function],
          "onDoubleClick": [Function],
          "onLongPress": [Function],
          "onSave": [Function],
          "onSaveToCamera": [Function],
          "onShowModal": [Function],
          "onSwipeDown": [Function],
          "renderArrowLeft": [Function],
          "renderArrowRight": [Function],
          "renderFooter": [Function],
          "renderHeader": [Function],
          "renderImage": [Function],
          "renderIndicator": [Function],
          "saveToLocalByLongPress": true,
          "show": false,
          "style": Object {},
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
