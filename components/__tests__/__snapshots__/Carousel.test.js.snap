// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Carousel Snapshot testing should have same snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Component>
    <Carousel
      activeAnimationOptions={null}
      activeAnimationType="timing"
      activeSlideAlignment="center"
      activeSlideOffset={20}
      apparitionDelay={0}
      autoplay={false}
      autoplayDelay={5000}
      autoplayInterval={3000}
      callbackOffsetMargin={5}
      containerCustomStyle={Object {}}
      contentContainerCustomStyle={Object {}}
      data={
        Array [
          1,
          2,
          3,
          4,
        ]
      }
      enableMomentum={false}
      enableSnap={true}
      firstItem={0}
      hasParallaxImages={false}
      inactiveSlideOpacity={0.7}
      inactiveSlideScale={0.9}
      inactiveSlideShift={0}
      itemWidth={593}
      layout="default"
      lockScrollTimeoutDuration={1000}
      lockScrollWhileSnapping={false}
      loop={false}
      loopClonesPerSide={3}
      onSnapToItem={[Function]}
      renderItem={[Function]}
      scrollEnabled={true}
      shouldOptimizeUpdates={true}
      slideStyle={Object {}}
      sliderWidth={750}
      swipeThreshold={20}
      useScrollView={false}
      vertical={false}
    />
    <Component>
      <Pagination
        activeDotIndex={0}
        containerStyle={
          Object {
            "backgroundColor": "transparent",
            "paddingVertical": 10,
          }
        }
        dotsLength={4}
        inactiveDotOpacity={0.4}
        inactiveDotScale={0.8}
        renderDots={[Function]}
        tappableDots={false}
        vertical={false}
      />
    </Component>
  </Component>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Carousel
          activeAnimationOptions={null}
          activeAnimationType="timing"
          activeSlideAlignment="center"
          activeSlideOffset={20}
          apparitionDelay={0}
          autoplay={false}
          autoplayDelay={5000}
          autoplayInterval={3000}
          callbackOffsetMargin={5}
          containerCustomStyle={Object {}}
          contentContainerCustomStyle={Object {}}
          data={
            Array [
              1,
              2,
              3,
              4,
            ]
          }
          enableMomentum={false}
          enableSnap={true}
          firstItem={0}
          hasParallaxImages={false}
          inactiveSlideOpacity={0.7}
          inactiveSlideScale={0.9}
          inactiveSlideShift={0}
          itemWidth={593}
          layout="default"
          lockScrollTimeoutDuration={1000}
          lockScrollWhileSnapping={false}
          loop={false}
          loopClonesPerSide={3}
          onSnapToItem={[Function]}
          renderItem={[Function]}
          scrollEnabled={true}
          shouldOptimizeUpdates={true}
          slideStyle={Object {}}
          sliderWidth={750}
          swipeThreshold={20}
          useScrollView={false}
          vertical={false}
        />,
        <Component>
          <Pagination
            activeDotIndex={0}
            containerStyle={
              Object {
                "backgroundColor": "transparent",
                "paddingVertical": 10,
              }
            }
            dotsLength={4}
            inactiveDotOpacity={0.4}
            inactiveDotScale={0.8}
            renderDots={[Function]}
            tappableDots={false}
            vertical={false}
          />
        </Component>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "activeAnimationOptions": null,
          "activeAnimationType": "timing",
          "activeSlideAlignment": "center",
          "activeSlideOffset": 20,
          "apparitionDelay": 0,
          "autoplay": false,
          "autoplayDelay": 5000,
          "autoplayInterval": 3000,
          "callbackOffsetMargin": 5,
          "containerCustomStyle": Object {},
          "contentContainerCustomStyle": Object {},
          "data": Array [
            1,
            2,
            3,
            4,
          ],
          "enableMomentum": false,
          "enableSnap": true,
          "firstItem": 0,
          "hasParallaxImages": false,
          "inactiveSlideOpacity": 0.7,
          "inactiveSlideScale": 0.9,
          "inactiveSlideShift": 0,
          "itemWidth": 593,
          "layout": "default",
          "lockScrollTimeoutDuration": 1000,
          "lockScrollWhileSnapping": false,
          "loop": false,
          "loopClonesPerSide": 3,
          "onSnapToItem": [Function],
          "renderItem": [Function],
          "scrollEnabled": true,
          "shouldOptimizeUpdates": true,
          "slideStyle": Object {},
          "sliderWidth": 750,
          "swipeThreshold": 20,
          "useScrollView": false,
          "vertical": false,
        },
        "ref": [Function],
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Pagination
            activeDotIndex={0}
            containerStyle={
              Object {
                "backgroundColor": "transparent",
                "paddingVertical": 10,
              }
            }
            dotsLength={4}
            inactiveDotOpacity={0.4}
            inactiveDotScale={0.8}
            renderDots={[Function]}
            tappableDots={false}
            vertical={false}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeDotIndex": 0,
            "containerStyle": Object {
              "backgroundColor": "transparent",
              "paddingVertical": 10,
            },
            "dotsLength": 4,
            "inactiveDotOpacity": 0.4,
            "inactiveDotScale": 0.8,
            "renderDots": [Function],
            "tappableDots": false,
            "vertical": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "View",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Carousel
            activeAnimationOptions={null}
            activeAnimationType="timing"
            activeSlideAlignment="center"
            activeSlideOffset={20}
            apparitionDelay={0}
            autoplay={false}
            autoplayDelay={5000}
            autoplayInterval={3000}
            callbackOffsetMargin={5}
            containerCustomStyle={Object {}}
            contentContainerCustomStyle={Object {}}
            data={
              Array [
                1,
                2,
                3,
                4,
              ]
            }
            enableMomentum={false}
            enableSnap={true}
            firstItem={0}
            hasParallaxImages={false}
            inactiveSlideOpacity={0.7}
            inactiveSlideScale={0.9}
            inactiveSlideShift={0}
            itemWidth={593}
            layout="default"
            lockScrollTimeoutDuration={1000}
            lockScrollWhileSnapping={false}
            loop={false}
            loopClonesPerSide={3}
            onSnapToItem={[Function]}
            renderItem={[Function]}
            scrollEnabled={true}
            shouldOptimizeUpdates={true}
            slideStyle={Object {}}
            sliderWidth={750}
            swipeThreshold={20}
            useScrollView={false}
            vertical={false}
          />,
          <Component>
            <Pagination
              activeDotIndex={0}
              containerStyle={
                Object {
                  "backgroundColor": "transparent",
                  "paddingVertical": 10,
                }
              }
              dotsLength={4}
              inactiveDotOpacity={0.4}
              inactiveDotScale={0.8}
              renderDots={[Function]}
              tappableDots={false}
              vertical={false}
            />
          </Component>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "activeAnimationOptions": null,
            "activeAnimationType": "timing",
            "activeSlideAlignment": "center",
            "activeSlideOffset": 20,
            "apparitionDelay": 0,
            "autoplay": false,
            "autoplayDelay": 5000,
            "autoplayInterval": 3000,
            "callbackOffsetMargin": 5,
            "containerCustomStyle": Object {},
            "contentContainerCustomStyle": Object {},
            "data": Array [
              1,
              2,
              3,
              4,
            ],
            "enableMomentum": false,
            "enableSnap": true,
            "firstItem": 0,
            "hasParallaxImages": false,
            "inactiveSlideOpacity": 0.7,
            "inactiveSlideScale": 0.9,
            "inactiveSlideShift": 0,
            "itemWidth": 593,
            "layout": "default",
            "lockScrollTimeoutDuration": 1000,
            "lockScrollWhileSnapping": false,
            "loop": false,
            "loopClonesPerSide": 3,
            "onSnapToItem": [Function],
            "renderItem": [Function],
            "scrollEnabled": true,
            "shouldOptimizeUpdates": true,
            "slideStyle": Object {},
            "sliderWidth": 750,
            "swipeThreshold": 20,
            "useScrollView": false,
            "vertical": false,
          },
          "ref": [Function],
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Pagination
              activeDotIndex={0}
              containerStyle={
                Object {
                  "backgroundColor": "transparent",
                  "paddingVertical": 10,
                }
              }
              dotsLength={4}
              inactiveDotOpacity={0.4}
              inactiveDotScale={0.8}
              renderDots={[Function]}
              tappableDots={false}
              vertical={false}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeDotIndex": 0,
              "containerStyle": Object {
                "backgroundColor": "transparent",
                "paddingVertical": 10,
              },
              "dotsLength": 4,
              "inactiveDotOpacity": 0.4,
              "inactiveDotScale": 0.8,
              "renderDots": [Function],
              "tappableDots": false,
              "vertical": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "View",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
